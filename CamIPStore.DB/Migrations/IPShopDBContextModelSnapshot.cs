// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CamIPStore.DB.Migrations
{
    [DbContext(typeof(IPShopDBContext))]
    partial class IPShopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Camera", b =>
                {
                    b.Property<int>("IdNSX")
                        .HasColumnName("IdNSX")
                        .HasColumnType("int");

                    b.Property<string>("AmThanh")
                        .HasColumnName("AmThanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CamBien")
                        .HasColumnName("CamBien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CoDay")
                        .HasColumnName("CoDay")
                        .HasColumnType("bit");

                    b.Property<bool>("DKTuXa")
                        .HasColumnName("DieuKhiTuXa")
                        .HasColumnType("bit");

                    b.Property<string>("DoPhanGiai")
                        .HasColumnName("DoPhanGiai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoXoayDoc")
                        .HasColumnName("DoXoayDoc")
                        .HasColumnType("int");

                    b.Property<int>("DoXoayNgang")
                        .HasColumnName("DoXoayNgang")
                        .HasColumnType("int");

                    b.Property<string>("DungLuong")
                        .HasColumnName("DungLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GiaBan")
                        .HasColumnName("GiaBan")
                        .HasColumnType("real");

                    b.Property<float>("GiaGoc")
                        .HasColumnName("GiaGoc")
                        .HasColumnType("real");

                    b.Property<int>("IdCam")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCam")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KhoangCach")
                        .HasColumnName("KhoangCach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KhongDay")
                        .HasColumnName("KhongDay")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasColumnName("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnName("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnName("TenCamera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XuatXu")
                        .HasColumnName("XuatXu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNSX");

                    b.ToTable("Camera");
                });

            modelBuilder.Entity("Entities.ChiTietHoaDon", b =>
                {
                    b.Property<int>("IdCam")
                        .HasColumnName("IdCam")
                        .HasColumnType("int");

                    b.Property<int>("IdHD")
                        .HasColumnName("IdHD")
                        .HasColumnType("int");

                    b.Property<float>("GiaBan")
                        .HasColumnName("GiaBan")
                        .HasColumnType("real");

                    b.Property<int>("SLMua")
                        .HasColumnName("SoLuongMua")
                        .HasColumnType("int");

                    b.HasKey("IdCam", "IdHD");

                    b.HasIndex("IdHD");

                    b.ToTable("ChiTietHoaDon");
                });

            modelBuilder.Entity("Entities.ChiTietKhuyenMai", b =>
                {
                    b.Property<int>("IdCam")
                        .HasColumnName("IdCam")
                        .HasColumnType("int");

                    b.Property<int>("IdKM")
                        .HasColumnName("IdKM")
                        .HasColumnType("int");

                    b.HasKey("IdCam", "IdKM");

                    b.HasIndex("IdKM");

                    b.ToTable("ChiTietKhuyenMai");
                });

            modelBuilder.Entity("Entities.GioHang", b =>
                {
                    b.Property<int>("IdCam")
                        .HasColumnName("IdCam")
                        .HasColumnType("int");

                    b.Property<int>("IdTK")
                        .HasColumnName("IdTK")
                        .HasColumnType("int");

                    b.Property<int>("Sl")
                        .HasColumnName("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdCam", "IdTK");

                    b.HasIndex("IdTK");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("Entities.Hinh", b =>
                {
                    b.Property<int>("IdHinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id Hình")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCam")
                        .HasColumnName("Id Cam")
                        .HasColumnType("int");

                    b.Property<bool>("HinhDaiDien")
                        .HasColumnName("HinhDaiDien")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHinh", "IdCam");

                    b.HasIndex("IdCam");

                    b.ToTable("Hinh");
                });

            modelBuilder.Entity("Entities.HoaDon", b =>
                {
                    b.Property<int>("IdTK")
                        .HasColumnName("IdTK")
                        .HasColumnType("int");

                    b.Property<int>("BaoHanh")
                        .HasColumnName("BaoHanh")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdHD")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NgayLap")
                        .HasColumnName("NgayLap")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnName("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<float>("TongGia")
                        .HasColumnName("TongGia")
                        .HasColumnType("real");

                    b.Property<int>("TrangThai")
                        .HasColumnName("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdTK");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("Entities.KhuyenMai", b =>
                {
                    b.Property<int>("IdKM")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdKM")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DenNgay")
                        .HasColumnName("Đến Ngày")
                        .HasColumnType("datetime");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnName("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<string>("TenKM")
                        .IsRequired()
                        .HasColumnName("TenKM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnName("Từ Ngày")
                        .HasColumnType("datetime");

                    b.HasKey("IdKM");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("Entities.NhaSanXuat", b =>
                {
                    b.Property<int>("IdNSX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdNSX")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenNSX")
                        .IsRequired()
                        .HasColumnName("TenNSX")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNSX");

                    b.ToTable("NhaSanXuat");
                });

            modelBuilder.Entity("Entities.TaiKhoan", b =>
                {
                    b.Property<int>("IdTK")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTK")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnName("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnName("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnName("MatKhau")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("QuyenSD")
                        .HasColumnName("QuyenSD")
                        .HasColumnType("bit");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnName("SDT")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TenTK")
                        .IsRequired()
                        .HasColumnName("TenTK")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("TrangThai")
                        .HasColumnName("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdTK");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("Entities.Camera", b =>
                {
                    b.HasOne("Entities.NhaSanXuat", "NhaSanXuat")
                        .WithMany("DsCamera")
                        .HasForeignKey("IdNSX")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("Entities.Camera", "Camera")
                        .WithMany("DsChiTietHoaDon")
                        .HasForeignKey("IdCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.HoaDon", "HoaDon")
                        .WithMany("DsChiTietHoaDon")
                        .HasForeignKey("IdHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("Entities.Camera", "Camera")
                        .WithMany("DsChiTietKhuyenMai")
                        .HasForeignKey("IdCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("DsChiTietKhuyenMai")
                        .HasForeignKey("IdKM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.GioHang", b =>
                {
                    b.HasOne("Entities.Camera", "Camera")
                        .WithMany("DsGioHang")
                        .HasForeignKey("IdCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("DsGioHang")
                        .HasForeignKey("IdTK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Hinh", b =>
                {
                    b.HasOne("Entities.Camera", "Camera")
                        .WithMany("DsHinh")
                        .HasForeignKey("IdCam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.HoaDon", b =>
                {
                    b.HasOne("Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("DsHoaDon")
                        .HasForeignKey("IdTK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
